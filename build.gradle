import java.util.concurrent.Callable
import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors

apply plugin: 'java'
apply plugin: 'application'

group = 'nu.mine.mosher.xml.xslt'
version = '1.0.0-SNAPSHOT'
mainClassName = 'nu.mine.mosher.xml.xslt.XsltServer'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'net.sf.saxon', name: 'Saxon-HE', version: 'latest.release'
    compile group: 'xerces', name: 'xercesImpl', version: 'latest.release', {
        exclude group: 'xml-apis'
    }
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: 'latest.release'
    compile group: 'com.sparkjava', name: 'spark-core', version: 'latest.release'
}

class RunAsyncTask extends DefaultTask {
  @TaskAction
  def startAsync() {
    ExecutorService es = Executors.newSingleThreadExecutor()
    es.submit({
      project.javaexec {
        classpath = project.sourceSets.main.runtimeClasspath
        main = project.mainClassName
        args = ["./tei"]
      }
    } as Callable)

  }
}

task serve(type: RunAsyncTask, dependsOn: compileJava) {
  doLast {
    println 'browse to http://127.0.0.1:4567'
    sleep(2 * 1000)
  }
}
